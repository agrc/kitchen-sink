{"version":3,"file":"index.esm.js","sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../react/jsx-runtime","../src/Sherlock.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import * as jsxRuntime from \"/Users/sgourley/dev/kitchen-sink/node_modules/react/jsx-runtime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import Graphic from '@arcgis/core/Graphic';\nimport { executeQueryJSON } from '@arcgis/core/rest/query';\nimport Query from '@arcgis/core/rest/support/Query';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Downshift from 'downshift';\nimport { escapeRegExp, sortBy, uniqWith } from 'lodash-es';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Button, Input, InputGroup } from 'reactstrap';\nimport './Sherlock.css';\n\nconst defaultSymbols = {\n  polygon: {\n    type: 'simple-fill',\n    color: [240, 240, 240, 0.5],\n    outline: {\n      style: 'solid',\n      color: [255, 255, 0, 0.5],\n      width: 2.5,\n    },\n  },\n  line: {\n    type: 'simple-line',\n    style: 'solid',\n    color: [255, 255, 0],\n    width: 5,\n  },\n  point: {\n    type: 'simple-marker',\n    style: 'circle',\n    color: [255, 255, 0, 0.5],\n    size: 10,\n  },\n};\n\nexport default function Sherlock({\n  symbols = defaultSymbols,\n  provider,\n  onSherlockMatch,\n  label,\n  placeHolder,\n  maxResultsToDisplay,\n}) {\n  const handleStateChange = async (feature) => {\n    const searchValue = feature.attributes[provider.searchField];\n\n    let contextValue;\n    if (provider.contextField) {\n      contextValue = feature.attributes[provider.contextField];\n    }\n\n    const response = await provider.getFeature(searchValue, contextValue);\n\n    const results = response.data;\n\n    const graphics = results.map(\n      (feature) =>\n        new Graphic({\n          geometry: feature.geometry,\n          attributes: feature.attributes,\n          symbol: symbols[feature.geometry.type],\n        })\n    );\n\n    onSherlockMatch(graphics);\n  };\n\n  const itemToString = (item) => {\n    console.log('Clue:itemToString', arguments);\n\n    return item ? item.attributes[provider.searchField] : '';\n  };\n\n  return (\n    <Downshift itemToString={itemToString} onChange={handleStateChange}>\n      {({\n        getInputProps,\n        getItemProps,\n        highlightedIndex,\n        isOpen,\n        inputValue,\n        getMenuProps,\n      }) => (\n        <div className=\"sherlock\">\n          <h4>{label}</h4>\n          <div style={{ paddingBottom: '1em' }}>\n            <InputGroup>\n              <Input\n                {...getInputProps()}\n                placeholder={placeHolder}\n                autoComplete=\"nope\"\n              ></Input>\n              <Button size=\"sm\" color=\"secondary\" disabled>\n                <FontAwesomeIcon icon={faSearch} size=\"lg\"></FontAwesomeIcon>\n              </Button>\n            </InputGroup>\n            <div className=\"sherlock__match-dropdown\" {...getMenuProps()}>\n              <ul className=\"sherlock__matches\">\n                {!isOpen ? null : (\n                  <Clue\n                    clue={inputValue}\n                    provider={provider}\n                    maxResults={maxResultsToDisplay}\n                  >\n                    {({ short, hasMore, error, data = [] }) => {\n                      if (short) {\n                        return (\n                          <li\n                            className=\"sherlock__match-item alert-primary\"\n                            disabled\n                          >\n                            Type more than 2 letters.\n                          </li>\n                        );\n                      }\n\n                      if (error) {\n                        return (\n                          <li\n                            className=\"sherlock__match-item alert-danger\"\n                            disabled\n                          >\n                            Error! ${error}\n                          </li>\n                        );\n                      }\n\n                      if (!data.length) {\n                        return (\n                          <li\n                            className=\"sherlock__match-item alert-warning\"\n                            disabled\n                          >\n                            No items found.\n                          </li>\n                        );\n                      }\n\n                      let items = data.map((item, index) => (\n                        // eslint-disable-next-line react/jsx-key\n                        <li\n                          {...getItemProps({\n                            key: index,\n                            className:\n                              'sherlock__match-item' +\n                              (highlightedIndex === index\n                                ? ' sherlock__match-item--selected'\n                                : ''),\n                            item,\n                            index,\n                          })}\n                        >\n                          <Highlighted\n                            text={item.attributes[provider.searchField]}\n                            highlight={inputValue}\n                          ></Highlighted>\n                          <div>\n                            {item.attributes[provider.contextField] || ''}\n                          </div>\n                        </li>\n                      ));\n\n                      if (hasMore) {\n                        items.push(\n                          <li\n                            key=\"too-many\"\n                            className=\"sherlock__match-item alert-primary text-center\"\n                            disabled\n                          >\n                            More than {maxResultsToDisplay} items found.\n                          </li>\n                        );\n                      }\n\n                      return items;\n                    }}\n                  </Clue>\n                )}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </Downshift>\n  );\n}\nSherlock.propTypes = {\n  symbols: PropTypes.object,\n  provider: PropTypes.object,\n  onSherlockMatch: PropTypes.func,\n  label: PropTypes.string,\n  placeHolder: PropTypes.string,\n  maxResultsToDisplay: PropTypes.number,\n};\n\nfunction Clue({ clue, provider, maxResults, children }) {\n  const [state, setState] = useState({\n    data: undefined,\n    loading: false,\n    error: false,\n    short: true,\n    hasMore: false,\n  });\n\n  const updateState = (newProps) => {\n    setState((oldState) => {\n      return {\n        ...oldState,\n        ...newProps,\n      };\n    });\n  };\n\n  const makeNetworkRequest = useCallback(async () => {\n    console.log('makeNetworkRequest');\n    const { searchField, contextField } = provider;\n\n    const response = await provider.search(clue).catch((e) => {\n      updateState({\n        data: undefined,\n        error: e.message,\n        loading: false,\n        short: clue.length <= 2,\n        hasMore: false,\n      });\n\n      console.error(e);\n    });\n\n    const iteratee = [`attributes.${searchField}`];\n    let hasContext = false;\n    if (contextField) {\n      iteratee.push(`attributes.${contextField}`);\n      hasContext = true;\n    }\n\n    let features = uniqWith(response.data, (a, b) => {\n      if (hasContext) {\n        return (\n          a.attributes[searchField] === b.attributes[searchField] &&\n          a.attributes[contextField] === b.attributes[contextField]\n        );\n      } else {\n        return a.attributes[searchField] === b.attributes[searchField];\n      }\n    });\n\n    features = sortBy(features, iteratee);\n    let hasMore = false;\n    if (features.length > maxResults) {\n      features = features.slice(0, maxResults);\n      hasMore = true;\n    }\n\n    updateState({\n      data: features,\n      loading: false,\n      error: false,\n      short: clue.length <= 2,\n      hasMore: hasMore,\n    });\n  }, [clue, maxResults, provider]);\n\n  useEffect(() => {\n    console.log('clue or makeNetworkRequest changed');\n    updateState({\n      error: false,\n      loading: true,\n      short: clue.length <= 2,\n      hasMore: false,\n    });\n\n    if (clue.length > 2) {\n      makeNetworkRequest();\n    }\n  }, [clue, makeNetworkRequest]);\n\n  const { short, data, loading, error, hasMore } = state;\n\n  return children({\n    short,\n    data,\n    loading,\n    error,\n    hasMore,\n    // refetch: fetchData,\n  });\n}\n\nclass ProviderBase {\n  controller = new AbortController();\n  signal = this.controller.signal;\n\n  getOutFields(outFields, searchField, contextField) {\n    outFields = outFields || [];\n\n    // don't mess with '*'\n    if (outFields[0] === '*') {\n      return outFields;\n    }\n\n    const addField = (fld) => {\n      if (fld && outFields.indexOf(fld) === -1) {\n        outFields.push(fld);\n      }\n    };\n\n    addField(searchField);\n    addField(contextField);\n\n    return outFields;\n  }\n\n  getSearchClause(text) {\n    return `UPPER(${this.searchField}) LIKE UPPER('%${text}%')`;\n  }\n\n  getFeatureClause(searchValue, contextValue) {\n    let statement = `${this.searchField}='${searchValue}'`;\n\n    if (this.contextField) {\n      if (contextValue && contextValue.length > 0) {\n        statement += ` AND ${this.contextField}='${contextValue}'`;\n      } else {\n        statement += ` AND ${this.contextField} IS NULL`;\n      }\n    }\n\n    return statement;\n  }\n\n  cancelPendingRequests() {\n    this.controller.abort();\n  }\n}\n\nexport class MapServiceProvider extends ProviderBase {\n  constructor(serviceUrl, searchField, options = {}) {\n    console.log('sherlock.MapServiceProvider:constructor', arguments);\n    super();\n\n    this.searchField = searchField;\n    this.contextField = options.contextField;\n    this.serviceUrl = serviceUrl;\n\n    this.setUpQueryTask(options);\n  }\n\n  async setUpQueryTask(options) {\n    const defaultWkid = 3857;\n    this.query = new Query();\n    this.query.outFields = this.getOutFields(\n      options.outFields,\n      this.searchField,\n      options.contextField\n    );\n    this.query.returnGeometry = false;\n    this.query.outSpatialReference = { wkid: options.wkid || defaultWkid };\n  }\n\n  async search(searchString) {\n    console.log('sherlock.MapServiceProvider:search', arguments);\n\n    this.query.where = this.getSearchClause(searchString);\n    const featureSet = await executeQueryJSON(this.serviceUrl, this.query);\n\n    return { data: featureSet.features };\n  }\n\n  async getFeature(searchValue, contextValue) {\n    console.log('sherlock.MapServiceProvider', arguments);\n\n    this.query.where = this.getFeatureClause(searchValue, contextValue);\n    this.query.returnGeometry = true;\n    const featureSet = await executeQueryJSON(this.serviceUrl, this.query);\n\n    return { data: featureSet.features };\n  }\n}\n\nexport class WebApiProvider extends ProviderBase {\n  constructor(apiKey, searchLayer, searchField, options) {\n    super();\n    console.log('sherlock.providers.WebAPI:constructor', arguments);\n\n    const defaultWkid = 3857;\n    this.geometryClasses = {\n      point: console.log,\n      polygon: console.log,\n      polyline: console.log,\n    };\n\n    this.searchLayer = searchLayer;\n    this.searchField = searchField;\n\n    if (options) {\n      this.wkid = options.wkid || defaultWkid;\n      this.contextField = options.contextField;\n      this.outFields = this.getOutFields(\n        options.outFields,\n        this.searchField,\n        this.contextField\n      );\n    } else {\n      this.wkid = defaultWkid;\n    }\n\n    this.outFields = this.getOutFields(\n      null,\n      this.searchField,\n      this.contextField\n    );\n    this.webApi = new WebApi(apiKey, this.signal);\n  }\n\n  async search(searchString) {\n    console.log('sherlock.providers.WebAPI:search', arguments);\n\n    return await this.webApi.search(this.searchLayer, this.outFields, {\n      predicate: this.getSearchClause(searchString),\n      spatialReference: this.wkid,\n    });\n  }\n\n  async getFeature(searchValue, contextValue) {\n    console.log('sherlock.providers.WebAPI:getFeature', arguments);\n\n    return await this.webApi.search(\n      this.searchLayer,\n      this.outFields.concat('shape@'),\n      {\n        predicate: this.getFeatureClause(searchValue, contextValue),\n        spatialReference: this.wkid,\n      }\n    );\n  }\n}\n\nconst Highlighted = ({ text = '', highlight = '' }) => {\n  if (!highlight.trim()) {\n    return <div>{text}</div>;\n  }\n\n  const regex = new RegExp(`(${escapeRegExp(highlight)})`, 'gi');\n  const parts = text.split(regex);\n\n  return (\n    <div>\n      {parts\n        .filter((part) => part)\n        .map((part, i) =>\n          regex.test(part) ? (\n            <mark key={i}>{part}</mark>\n          ) : (\n            <span key={i}>{part}</span>\n          )\n        )}\n    </div>\n  );\n};\nHighlighted.propTypes = {\n  text: PropTypes.string,\n  highlight: PropTypes.string,\n};\n\nclass WebApi {\n  constructor(apiKey, signal) {\n    this.baseUrl = 'https://api.mapserv.utah.gov/api/v1/';\n\n    // defaultAttributeStyle: String\n    this.defaultAttributeStyle = 'identical';\n\n    // xhrProvider: dojo/request/* provider\n    //      The current provider as determined by the search function\n    this.xhrProvider = null;\n\n    // Properties to be sent into constructor\n\n    // apiKey: String\n    //      web api key (http://developer.mapserv.utah.gov/AccountAccess)\n    this.apiKey = apiKey;\n\n    this.signal = signal;\n  }\n\n  async search(featureClass, returnValues, options) {\n    // summary:\n    //      search service wrapper (http://api.mapserv.utah.gov/#search)\n    // featureClass: String\n    //      Fully qualified feature class name eg: SGID10.Boundaries.Counties\n    // returnValues: String[]\n    //      A list of attributes to return eg: ['NAME', 'FIPS'].\n    //      To include the geometry use the shape@ token or if you want the\n    //      envelope use the shape@envelope token.\n    // options.predicate: String\n    //      Search criteria for finding specific features in featureClass.\n    //      Any valid ArcObjects where clause will work. If omitted, a TSQL *\n    //      will be used instead. eg: NAME LIKE 'K%'\n    // options.geometry: String (not fully implemented)\n    //      The point geometry used for spatial queries. Points are denoted as\n    //      'point:[x,y]'.\n    // options.spatialReference: Number\n    //      The spatial reference of the input geographic coordinate pair.\n    //      Choose any of the wkid's from the Geographic Coordinate System wkid reference\n    //      or Projected Coordinate System wkid reference. 26912 is the default.\n    // options.tolerance: Number (not implemented)\n    // options.spatialRelation: String (default: 'intersect')\n    // options.buffer: Number\n    //      A distance in meters to buffer the input geometry.\n    //      2000 meters is the maximum buffer.\n    // options.pageSize: Number (not implemented)\n    // options.skip: Number (not implemented)\n    // options.attributeStyle: String (defaults to 'identical')\n    //      Controls the casing of the attributes that are returned.\n    //      Options:\n    //\n    //      'identical': as is in data.\n    //      'upper': upper cases all attribute names.\n    //      'lower': lower cases all attribute names.\n    //      'camel': camel cases all attribute names\n    //\n    // returns: Promise\n    console.log('WebApi:search', arguments);\n\n    var url = `${this.baseUrl}search/${featureClass}/${encodeURIComponent(\n      returnValues.join(',')\n    )}?`;\n\n    if (!options) {\n      options = {};\n    }\n\n    options.apiKey = this.apiKey;\n    if (!options.attributeStyle) {\n      options.attributeStyle = this.defaultAttributeStyle;\n    }\n\n    const response = await fetch(url + new URLSearchParams(options), {\n      signal: this.signal,\n    });\n\n    if (!response.ok) {\n      return {\n        ok: false,\n        message: response.message || response.statusText,\n      };\n    }\n\n    const result = await response.json();\n\n    if (result.status !== 200) {\n      return {\n        ok: false,\n        message: result.message,\n      };\n    }\n\n    return {\n      ok: true,\n      data: result.result,\n    };\n  }\n}\n\nexport class LocatorSuggestProvider extends ProviderBase {\n  searchField = 'text';\n  idField = 'magicKey';\n\n  constructor(url, outSRID) {\n    super();\n    this.url = url;\n    this.outSRID = outSRID;\n  }\n\n  async search(searchString, maxresults) {\n    const suggestUrl = `${this.url}/suggest?text=${searchString}&maxSuggestions=${maxresults}`;\n\n    let response;\n    try {\n      response = await fetch(suggestUrl);\n      const responseJson = await response.json();\n      const features = responseJson.suggestions.map((suggestion) => {\n        return {\n          attributes: suggestion,\n        };\n      });\n\n      return features;\n    } catch {\n      const message = 'error with suggest request';\n      console.error(message, response);\n\n      throw new Error(message);\n    }\n  }\n\n  async getFeature(magicKey) {\n    const getFeatureUrl = `${this.url}/findAddressCandidates?magicKey=${magicKey}&outSR={\"wkid\":${this.outSRID}}`;\n\n    const response = await fetch(getFeatureUrl);\n    const responseJson = await response.json();\n    const candidate = responseJson.candidates[0];\n    candidate.geometry = {\n      ...candidate.location,\n      type: 'point',\n      spatialReference: {\n        wkid: this.outSRID,\n      },\n    };\n    // used to zoom to result\n    candidate.attributes.extent = {\n      ...candidate.extent,\n      spatialReference: {\n        wkid: this.outSRID,\n      },\n    };\n\n    return [candidate];\n  }\n}\n"],"names":["jsxRuntimeModule","require$$0","jsxRuntime.jsx","jsxRuntime.jsxs","defaultSymbols","polygon","type","color","outline","style","width","line","point","size","symbols","provider","onSherlockMatch","label","placeHolder","maxResultsToDisplay","handleStateChange","feature","searchValue","attributes","searchField","contextValue","contextField","response","getFeature","results","data","graphics","map","Graphic","geometry","symbol","itemToString","item","log","arguments","getInputProps","getItemProps","highlightedIndex","isOpen","inputValue","getMenuProps","_jsx","_jsxs","paddingBottom","faSearch","short","hasMore","error","length","items","index","key","className","push","Sherlock","propTypes","PropTypes","object","func","string","number","clue","maxResults","children","state","setState","useState","undefined","loading","updateState","newProps","oldState","makeNetworkRequest","useCallback","console","search","catch","e","message","iteratee","hasContext","features","uniqWith","a","b","sortBy","slice","useEffect","ProviderBase","controller","AbortController","signal","getOutFields","outFields","addField","fld","indexOf","getSearchClause","text","getFeatureClause","statement","cancelPendingRequests","abort","MapServiceProvider","constructor","serviceUrl","options","setUpQueryTask","defaultWkid","query","Query","returnGeometry","outSpatialReference","wkid","searchString","where","featureSet","executeQueryJSON","WebApiProvider","apiKey","searchLayer","geometryClasses","polyline","webApi","WebApi","predicate","spatialReference","concat","Highlighted","highlight","trim","regex","RegExp","escapeRegExp","parts","split","filter","part","i","test","baseUrl","defaultAttributeStyle","xhrProvider","featureClass","returnValues","url","encodeURIComponent","join","attributeStyle","fetch","URLSearchParams","ok","statusText","result","json","status","LocatorSuggestProvider","outSRID","idField","maxresults","suggestUrl","responseJson","suggestions","suggestion","Error","magicKey","getFeatureUrl","candidate","candidates","location","extent"],"mappings":"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"}