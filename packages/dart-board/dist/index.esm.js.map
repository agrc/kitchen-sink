{"version":3,"file":"index.esm.js","sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../react/jsx-runtime","../src/Dartboard.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import * as jsxRuntime from \"/Users/sgourley/dev/kitchen-sink/node_modules/react/jsx-runtime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { toQueryString } from '@ugrc/utilities';\nimport { clsx } from 'clsx';\nimport './Dartboard.css';\n\nconst ADDRESS_TYPE = 'single-address';\nconst MILEPOST_TYPE = 'route-milepost';\n\nconst defaultProps = {\n  type: ADDRESS_TYPE,\n  address: {\n    acceptScore: 70,\n    suggest: 0,\n    locators: 'all',\n    poBox: false,\n    scoreDifference: false,\n  },\n  milepost: {\n    side: 'increasing',\n    fullRoute: false,\n  },\n  wkid: 3857,\n  callback: null,\n  format: null,\n  pointSymbol: {\n    style: 'diamond',\n    color: [255, 0, 0, 0.5],\n  },\n  events: {\n    success: console.log,\n    error: console.error,\n  },\n};\n\nconst sanitize = (attributes = {}) => {\n  const dartboardCustomProps = ['beforeClick', 'beforeKeyUp'];\n\n  return Object.keys(attributes)\n    .filter((key) => dartboardCustomProps.indexOf(key) === -1)\n    .reduce((res, key) => ((res[key] = attributes[key]), res), {});\n};\n\nconst BootstrapDartboard = (props) => {\n  const {\n    getFirstLabelProps,\n    getSecondLabelProps,\n    getFirstInputProps,\n    getSecondInputProps,\n    getButtonProps,\n    isFirstInputValid,\n    isSecondInputValid,\n    found,\n  } = useDartboard(props);\n\n  return (\n    <div className={clsx('dartboard', props.className)}>\n      <div className=\"form-group\">\n        <label {...getFirstLabelProps()}></label>\n        <input {...getFirstInputProps()} className=\"form-control\"></input>\n        {!isFirstInputValid ? (\n          <small className=\"form-text text-danger\">\n            This field is required\n          </small>\n        ) : null}\n      </div>\n      <div className=\"form-group\">\n        <label {...getSecondLabelProps()}></label>\n        <input {...getSecondInputProps()} className=\"form-control\"></input>\n        {!isSecondInputValid ? (\n          <small className=\"form-text text-danger\">\n            This field is required\n          </small>\n        ) : null}\n      </div>\n      <div className=\"form-group\">\n        <button {...getButtonProps()} className=\"btn btn-outline-dark\">\n          Find\n        </button>\n        {found === false ? (\n          <small className=\"form-text text-danger\">No match found</small>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nconst TailwindDartboard = (props) => {\n  const {\n    getFirstLabelProps,\n    getSecondLabelProps,\n    getFirstInputProps,\n    getSecondInputProps,\n    getButtonProps,\n    getFirstHelpProps,\n    getSecondHelpProps,\n    isFirstInputValid,\n    isSecondInputValid,\n    found,\n  } = useDartboard(props);\n\n  return (\n    <div className={clsx('dartboard', props.className)}>\n      <div className=\"group\">\n        <label {...getFirstLabelProps()}></label>\n        <input\n          {...getFirstInputProps()}\n          className=\"mb-2 block mt-1 bg-white rounded border border-gray-400 text-gray-700 focus:outline-none focus:border-indigo-500 w-full text-base px-3 py-2\"\n        ></input>\n        {!isFirstInputValid ? (\n          <small\n            {...getFirstHelpProps()}\n            className=\"block text-red-600 text-xs -mt-2\"\n          ></small>\n        ) : null}\n      </div>\n      <div className=\"group\">\n        <label {...getSecondLabelProps()}></label>\n        <input\n          {...getSecondInputProps()}\n          className=\"mb-2 block mt-1 bg-white rounded border border-gray-400 text-gray-700 focus:outline-none focus:border-indigo-500 w-full text-base px-3 py-2\"\n        ></input>\n        {!isSecondInputValid ? (\n          <small\n            {...getSecondHelpProps()}\n            className=\"block text-red-600 text-xs -mt-2\"\n          ></small>\n        ) : null}\n      </div>\n      <div className=\"group\">\n        <button\n          {...getButtonProps()}\n          className=\"text-black bg-white border border-gray-800 py-1 px-3 focus:outline-none hover:bg-gray-800 hover:text-white transition duration-200 rounded text-lg mt-4\"\n        >\n          Find\n        </button>\n        {(() => {\n          if (found === false) {\n            return (\n              <small className=\"ml-3 text-red-600 text-xs\">\n                No match found\n              </small>\n            );\n          } else if (found === true) {\n            return <small className=\"ml-3 text-lg\">âœ…</small>;\n          } else {\n            return null;\n          }\n        })()}\n      </div>\n    </div>\n  );\n};\n\nconst useDartboard = (userProps = {}) => {\n  const props = {\n    ...defaultProps,\n    ...userProps,\n  };\n\n  const [firstInput, setFirstInput] = useState();\n  const [secondInput, setSecondInput] = useState();\n  const [firstIsValid, setFirstIsValid] = useState(true);\n  const [secondIsValid, setSecondIsValid] = useState(true);\n  const [found, setFound] = useState();\n\n  let baseUrl = 'https://api.mapserv.utah.gov/api/v1/geocode';\n  if (props.type !== ADDRESS_TYPE) {\n    baseUrl += '/milepost';\n  }\n\n  const getFirstLabelProps = (labelProps) => ({\n    htmlFor:\n      props.type === ADDRESS_TYPE\n        ? 'dartboard_street_input'\n        : 'dartboard_milepost_input',\n    children: props.type === ADDRESS_TYPE ? 'Street address' : 'Route',\n    ...labelProps,\n  });\n\n  const getSecondLabelProps = (labelProps) => ({\n    htmlFor:\n      props.type === ADDRESS_TYPE\n        ? 'dartboard_zone_input'\n        : 'dartboard_route_input',\n    children: props.type === ADDRESS_TYPE ? 'City or Zip code' : 'Milepost',\n    ...labelProps,\n  });\n\n  const getFirstInputProps = (inputProps) => ({\n    onChange: (e) => setFirstInput(e.target.value),\n    name:\n      props.type === ADDRESS_TYPE\n        ? 'dartboard_street_input'\n        : 'dartboard_milepost_input',\n    onKeyUp: (e) => {\n      inputProps?.beforeKeyUp(e);\n      handleKeyUp(e);\n    },\n    autoComplete: 'off',\n    ...sanitize(inputProps),\n  });\n\n  const getSecondInputProps = (inputProps) => ({\n    onChange: (e) => setSecondInput(e.target.value),\n    name:\n      props.type === ADDRESS_TYPE\n        ? 'dartboard_zone_input'\n        : 'dartboard_route_input',\n    onKeyUp: (e) => {\n      inputProps?.beforeKeyUp(e);\n      handleKeyUp(e);\n    },\n    autoComplete: 'off',\n    ...sanitize(inputProps),\n  });\n\n  const getFirstHelpProps = (inputProps) => ({\n    children:\n      props.type === ADDRESS_TYPE\n        ? 'A street address is required'\n        : 'A highway route number is required',\n    ...inputProps,\n  });\n\n  const getSecondHelpProps = (inputProps) => ({\n    children:\n      props.type === ADDRESS_TYPE\n        ? 'A city or zip code is required'\n        : 'A milepost number is required',\n    ...inputProps,\n  });\n\n  const getButtonProps = (buttonProps) => ({\n    onClick: (e) => {\n      buttonProps?.beforeClick(e);\n      find(e);\n    },\n    type: 'button',\n    ...sanitize(buttonProps),\n  });\n\n  const validate = useCallback(() => {\n    const firstValidity = firstInput?.trim()?.length > 0;\n    const secondValidity = secondInput?.trim()?.length > 0;\n\n    setFirstIsValid(firstValidity);\n    setSecondIsValid(secondValidity);\n\n    // reset not found message\n    setFound(null);\n\n    return firstValidity && secondValidity;\n  }, [firstInput, secondInput]);\n\n  const get = useCallback(\n    (options) => {\n      const url = `${baseUrl}/${options.firstInput}/${options.secondInput}?`;\n\n      let query = {\n        apiKey: props.apiKey,\n        spatialReference: props.wkid,\n        format: props.format,\n        callback: props.callback,\n      };\n\n      if (props.type === ADDRESS_TYPE) {\n        query = { ...props.address, ...query };\n      } else {\n        query = { ...props.milepost, ...query };\n      }\n\n      const querystring = toQueryString(query);\n\n      return fetch(url + querystring, {\n        method: 'GET',\n        mode: 'cors',\n      });\n    },\n    [\n      props.apiKey,\n      props.wkid,\n      props.address,\n      props.milepost,\n      props.type,\n      props.format,\n      props.callback,\n      baseUrl,\n    ]\n  );\n\n  const outputTransform = useCallback(\n    (result, point) => {\n      let attributes = {\n        address: result.inputAddress,\n      };\n      let popupTemplate = {\n        title: '{address}',\n      };\n\n      if (props.type !== ADDRESS_TYPE) {\n        attributes = {\n          matchRoute: result.matchRoute,\n        };\n        popupTemplate = {\n          title: '{matchRoute}',\n        };\n      }\n\n      return {\n        geometry: point,\n        symbol: props.pointSymbol,\n        attributes,\n        popupTemplate,\n      };\n    },\n    [props.pointSymbol, props.type]\n  );\n\n  const extractResponse = useCallback(\n    async (response) => {\n      if (!response.ok) {\n        setFound(false);\n\n        return props.events.error(await response.json());\n      }\n\n      let result = await response.json();\n\n      if (result.status !== 200) {\n        setFound(false);\n\n        return props.events.error(response);\n      }\n\n      result = result.result;\n\n      if (props.format?.toLowerCase() === 'geojson') {\n        return result;\n      }\n\n      setFound(true);\n\n      const point = {\n        type: 'point',\n        x: result.location.x,\n        y: result.location.y,\n        spatialReference: {\n          wkid: props.wkid,\n        },\n      };\n\n      return outputTransform(result, point);\n    },\n    [outputTransform, props.wkid, props.format, props.events]\n  );\n\n  const find = useCallback(async () => {\n    if (!validate()) {\n      return false;\n    }\n\n    let response;\n\n    try {\n      response = await get({\n        firstInput,\n        secondInput,\n      });\n    } catch (err) {\n      return props.events.error(\n        response?.text() || {\n          message: err.message,\n          status: 400,\n        }\n      );\n    }\n\n    const location = await extractResponse(response);\n\n    if (location) {\n      return props.events.success(location);\n    }\n  }, [firstInput, secondInput, validate, props.events, get, extractResponse]);\n\n  const handleKeyUp = useCallback(\n    (event) => {\n      if (event.key !== 'Enter') {\n        return;\n      }\n\n      find();\n    },\n    [find]\n  );\n\n  return {\n    // prop getters\n    getFirstLabelProps,\n    getSecondLabelProps,\n    getFirstInputProps,\n    getSecondInputProps,\n    getButtonProps,\n    getFirstHelpProps,\n    getSecondHelpProps,\n    // actions\n    setFirstIsValid,\n    setSecondIsValid,\n    setFound,\n    // state\n    isSecondInputValid: secondIsValid,\n    isFirstInputValid: firstIsValid,\n    found,\n    firstInput,\n    secondInput,\n  };\n};\n\nBootstrapDartboard.propTypes = TailwindDartboard.propTypes = {\n  apiKey: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([ADDRESS_TYPE, MILEPOST_TYPE]),\n  pointSymbol: PropTypes.object,\n  events: PropTypes.exact({\n    success: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n  }),\n  wkid: PropTypes.number,\n  address: PropTypes.shape({\n    acceptScore: PropTypes.number,\n    suggest: PropTypes.number,\n    locators: PropTypes.oneOf([\n      null,\n      'all',\n      'addressPoints',\n      'roadCenterlines',\n    ]),\n    poBox: PropTypes.bool,\n    scoreDifference: PropTypes.bool,\n  }),\n  milepost: PropTypes.shape({\n    side: PropTypes.oneOf([null, 'increasing', 'decreasing']),\n    fullRoute: PropTypes.bool,\n  }),\n  format: PropTypes.oneOf([null, 'esrijson', 'geojson']),\n  callback: PropTypes.string,\n};\n\nexport default TailwindDartboard;\nexport { useDartboard, BootstrapDartboard, TailwindDartboard };\n"],"names":["jsxRuntimeModule","require$$0","jsxRuntime.jsx","jsxRuntime.jsxs","ADDRESS_TYPE","MILEPOST_TYPE","defaultProps","type","address","acceptScore","suggest","locators","poBox","scoreDifference","milepost","side","fullRoute","wkid","callback","format","pointSymbol","style","color","events","success","console","log","error","sanitize","attributes","dartboardCustomProps","Object","keys","filter","key","indexOf","reduce","res","BootstrapDartboard","props","getFirstLabelProps","getSecondLabelProps","getFirstInputProps","getSecondInputProps","getButtonProps","isFirstInputValid","isSecondInputValid","found","useDartboard","clsx","className","_jsxs","_jsx","TailwindDartboard","getFirstHelpProps","getSecondHelpProps","userProps","firstInput","setFirstInput","useState","secondInput","setSecondInput","firstIsValid","setFirstIsValid","secondIsValid","setSecondIsValid","setFound","baseUrl","labelProps","htmlFor","children","inputProps","onChange","e","target","value","name","onKeyUp","beforeKeyUp","handleKeyUp","autoComplete","buttonProps","onClick","beforeClick","find","validate","useCallback","firstValidity","trim","length","secondValidity","get","options","url","query","apiKey","spatialReference","querystring","toQueryString","fetch","method","mode","outputTransform","result","point","inputAddress","popupTemplate","title","matchRoute","geometry","symbol","extractResponse","response","ok","json","status","toLowerCase","x","location","y","err","text","message","event","propTypes","PropTypes","string","isRequired","oneOf","object","exact","func","number","shape","bool"],"mappings":"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"}